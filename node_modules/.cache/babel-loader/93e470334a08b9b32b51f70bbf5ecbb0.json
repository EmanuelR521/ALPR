{"ast":null,"code":"import { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context.js';\nimport { warnOnce, loadNamespaces, loadLanguages, hasLoadedNamespace } from './utils.js';\n\nconst usePrevious = (value, ignore) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\n\nfunction alwaysNewT(i18n, language, namespace, keyPrefix) {\n  return i18n.getFixedT(language, namespace, keyPrefix);\n}\n\nfunction useMemoizedT(i18n, language, namespace, keyPrefix) {\n  return useCallback(alwaysNewT(i18n, language, namespace, keyPrefix), [i18n, language, namespace, keyPrefix]);\n}\n\nexport function useTranslation(ns) {\n  let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = useContext(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using initReactI18next');\n\n    const notReadyT = (k, optsOrDefaultValue) => {\n      if (typeof optsOrDefaultValue === 'string') return optsOrDefaultValue;\n      if (optsOrDefaultValue && typeof optsOrDefaultValue === 'object' && typeof optsOrDefaultValue.defaultValue === 'string') return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n\n    const retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n\n  if (i18n.options.react && i18n.options.react.wait !== undefined) warnOnce('It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n  const i18nOptions = { ...getDefaults(),\n    ...i18n.options.react,\n    ...props\n  };\n  const {\n    useSuspense,\n    keyPrefix\n  } = i18nOptions;\n  let namespaces = ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  if (i18n.reportNamespaces.addUsedNamespaces) i18n.reportNamespaces.addUsedNamespaces(namespaces);\n  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => hasLoadedNamespace(n, i18n, i18nOptions));\n  const memoGetT = useMemoizedT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n\n  const getT = () => memoGetT;\n\n  const getNewT = () => alwaysNewT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n\n  const [t, setT] = useState(getT);\n  let joinedNS = namespaces.join();\n  if (props.lng) joinedNS = `${props.lng}${joinedNS}`;\n  const previousJoinedNS = usePrevious(joinedNS);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const {\n      bindI18n,\n      bindI18nStore\n    } = i18nOptions;\n    isMounted.current = true;\n\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        loadLanguages(i18n, props.lng, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      } else {\n        loadNamespaces(i18n, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      }\n    }\n\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getNewT);\n    }\n\n    function boundReset() {\n      if (isMounted.current) setT(getNewT);\n    }\n\n    if (bindI18n && i18n) i18n.on(bindI18n, boundReset);\n    if (bindI18nStore && i18n) i18n.store.on(bindI18nStore, boundReset);\n    return () => {\n      isMounted.current = false;\n      if (bindI18n && i18n) bindI18n.split(' ').forEach(e => i18n.off(e, boundReset));\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n    };\n  }, [i18n, joinedNS]);\n  useEffect(() => {\n    if (isMounted.current && ready) {\n      setT(getT);\n    }\n  }, [i18n, keyPrefix, ready]);\n  const ret = [t, i18n, ready];\n  ret.t = t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(resolve => {\n    if (props.lng) {\n      loadLanguages(i18n, props.lng, namespaces, () => resolve());\n    } else {\n      loadNamespaces(i18n, namespaces, () => resolve());\n    }\n  });\n}","map":{"version":3,"names":["useState","useEffect","useContext","useRef","useCallback","getI18n","getDefaults","ReportNamespaces","I18nContext","warnOnce","loadNamespaces","loadLanguages","hasLoadedNamespace","usePrevious","value","ignore","ref","current","alwaysNewT","i18n","language","namespace","keyPrefix","getFixedT","useMemoizedT","useTranslation","ns","props","arguments","length","undefined","i18nFromProps","i18nFromContext","defaultNS","defaultNSFromContext","reportNamespaces","notReadyT","k","optsOrDefaultValue","defaultValue","Array","isArray","retNotReady","t","ready","options","react","wait","i18nOptions","useSuspense","namespaces","addUsedNamespaces","isInitialized","initializedStoreOnce","every","n","memoGetT","lng","nsMode","getT","getNewT","setT","joinedNS","join","previousJoinedNS","isMounted","bindI18n","bindI18nStore","boundReset","on","store","split","forEach","e","off","ret","Promise","resolve"],"sources":["C:/Users/Emanu/OneDrive/Escritorio/PATIC/ALPR/node_modules/react-i18next/dist/es/useTranslation.js"],"sourcesContent":["import { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context.js';\nimport { warnOnce, loadNamespaces, loadLanguages, hasLoadedNamespace } from './utils.js';\nconst usePrevious = (value, ignore) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\nfunction alwaysNewT(i18n, language, namespace, keyPrefix) {\n  return i18n.getFixedT(language, namespace, keyPrefix);\n}\nfunction useMemoizedT(i18n, language, namespace, keyPrefix) {\n  return useCallback(alwaysNewT(i18n, language, namespace, keyPrefix), [i18n, language, namespace, keyPrefix]);\n}\nexport function useTranslation(ns) {\n  let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = useContext(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using initReactI18next');\n    const notReadyT = (k, optsOrDefaultValue) => {\n      if (typeof optsOrDefaultValue === 'string') return optsOrDefaultValue;\n      if (optsOrDefaultValue && typeof optsOrDefaultValue === 'object' && typeof optsOrDefaultValue.defaultValue === 'string') return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n    const retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n  if (i18n.options.react && i18n.options.react.wait !== undefined) warnOnce('It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n  const i18nOptions = {\n    ...getDefaults(),\n    ...i18n.options.react,\n    ...props\n  };\n  const {\n    useSuspense,\n    keyPrefix\n  } = i18nOptions;\n  let namespaces = ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  if (i18n.reportNamespaces.addUsedNamespaces) i18n.reportNamespaces.addUsedNamespaces(namespaces);\n  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => hasLoadedNamespace(n, i18n, i18nOptions));\n  const memoGetT = useMemoizedT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const getT = () => memoGetT;\n  const getNewT = () => alwaysNewT(i18n, props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  const [t, setT] = useState(getT);\n  let joinedNS = namespaces.join();\n  if (props.lng) joinedNS = `${props.lng}${joinedNS}`;\n  const previousJoinedNS = usePrevious(joinedNS);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const {\n      bindI18n,\n      bindI18nStore\n    } = i18nOptions;\n    isMounted.current = true;\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        loadLanguages(i18n, props.lng, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      } else {\n        loadNamespaces(i18n, namespaces, () => {\n          if (isMounted.current) setT(getNewT);\n        });\n      }\n    }\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getNewT);\n    }\n    function boundReset() {\n      if (isMounted.current) setT(getNewT);\n    }\n    if (bindI18n && i18n) i18n.on(bindI18n, boundReset);\n    if (bindI18nStore && i18n) i18n.store.on(bindI18nStore, boundReset);\n    return () => {\n      isMounted.current = false;\n      if (bindI18n && i18n) bindI18n.split(' ').forEach(e => i18n.off(e, boundReset));\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n    };\n  }, [i18n, joinedNS]);\n  useEffect(() => {\n    if (isMounted.current && ready) {\n      setT(getT);\n    }\n  }, [i18n, keyPrefix, ready]);\n  const ret = [t, i18n, ready];\n  ret.t = t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(resolve => {\n    if (props.lng) {\n      loadLanguages(i18n, props.lng, namespaces, () => resolve());\n    } else {\n      loadNamespaces(i18n, namespaces, () => resolve());\n    }\n  });\n}"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,EAA0CC,MAA1C,EAAkDC,WAAlD,QAAqE,OAArE;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,gBAA/B,EAAiDC,WAAjD,QAAoE,cAApE;AACA,SAASC,QAAT,EAAmBC,cAAnB,EAAmCC,aAAnC,EAAkDC,kBAAlD,QAA4E,YAA5E;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,MAAMC,GAAG,GAAGb,MAAM,EAAlB;EACAF,SAAS,CAAC,MAAM;IACde,GAAG,CAACC,OAAJ,GAAcF,MAAM,GAAGC,GAAG,CAACC,OAAP,GAAiBH,KAArC;EACD,CAFQ,EAEN,CAACA,KAAD,EAAQC,MAAR,CAFM,CAAT;EAGA,OAAOC,GAAG,CAACC,OAAX;AACD,CAND;;AAOA,SAASC,UAAT,CAAoBC,IAApB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,SAA/C,EAA0D;EACxD,OAAOH,IAAI,CAACI,SAAL,CAAeH,QAAf,EAAyBC,SAAzB,EAAoCC,SAApC,CAAP;AACD;;AACD,SAASE,YAAT,CAAsBL,IAAtB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,SAAjD,EAA4D;EAC1D,OAAOlB,WAAW,CAACc,UAAU,CAACC,IAAD,EAAOC,QAAP,EAAiBC,SAAjB,EAA4BC,SAA5B,CAAX,EAAmD,CAACH,IAAD,EAAOC,QAAP,EAAiBC,SAAjB,EAA4BC,SAA5B,CAAnD,CAAlB;AACD;;AACD,OAAO,SAASG,cAAT,CAAwBC,EAAxB,EAA4B;EACjC,IAAIC,KAAK,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAhF;EACA,MAAM;IACJT,IAAI,EAAEY;EADF,IAEFJ,KAFJ;EAGA,MAAM;IACJR,IAAI,EAAEa,eADF;IAEJC,SAAS,EAAEC;EAFP,IAGFhC,UAAU,CAACM,WAAD,CAAV,IAA2B,EAH/B;EAIA,MAAMW,IAAI,GAAGY,aAAa,IAAIC,eAAjB,IAAoC3B,OAAO,EAAxD;EACA,IAAIc,IAAI,IAAI,CAACA,IAAI,CAACgB,gBAAlB,EAAoChB,IAAI,CAACgB,gBAAL,GAAwB,IAAI5B,gBAAJ,EAAxB;;EACpC,IAAI,CAACY,IAAL,EAAW;IACTV,QAAQ,CAAC,wEAAD,CAAR;;IACA,MAAM2B,SAAS,GAAG,CAACC,CAAD,EAAIC,kBAAJ,KAA2B;MAC3C,IAAI,OAAOA,kBAAP,KAA8B,QAAlC,EAA4C,OAAOA,kBAAP;MAC5C,IAAIA,kBAAkB,IAAI,OAAOA,kBAAP,KAA8B,QAApD,IAAgE,OAAOA,kBAAkB,CAACC,YAA1B,KAA2C,QAA/G,EAAyH,OAAOD,kBAAkB,CAACC,YAA1B;MACzH,OAAOC,KAAK,CAACC,OAAN,CAAcJ,CAAd,IAAmBA,CAAC,CAACA,CAAC,CAACR,MAAF,GAAW,CAAZ,CAApB,GAAqCQ,CAA5C;IACD,CAJD;;IAKA,MAAMK,WAAW,GAAG,CAACN,SAAD,EAAY,EAAZ,EAAgB,KAAhB,CAApB;IACAM,WAAW,CAACC,CAAZ,GAAgBP,SAAhB;IACAM,WAAW,CAACvB,IAAZ,GAAmB,EAAnB;IACAuB,WAAW,CAACE,KAAZ,GAAoB,KAApB;IACA,OAAOF,WAAP;EACD;;EACD,IAAIvB,IAAI,CAAC0B,OAAL,CAAaC,KAAb,IAAsB3B,IAAI,CAAC0B,OAAL,CAAaC,KAAb,CAAmBC,IAAnB,KAA4BjB,SAAtD,EAAiErB,QAAQ,CAAC,qGAAD,CAAR;EACjE,MAAMuC,WAAW,GAAG,EAClB,GAAG1C,WAAW,EADI;IAElB,GAAGa,IAAI,CAAC0B,OAAL,CAAaC,KAFE;IAGlB,GAAGnB;EAHe,CAApB;EAKA,MAAM;IACJsB,WADI;IAEJ3B;EAFI,IAGF0B,WAHJ;EAIA,IAAIE,UAAU,GAAGxB,EAAE,IAAIQ,oBAAN,IAA8Bf,IAAI,CAAC0B,OAAL,IAAgB1B,IAAI,CAAC0B,OAAL,CAAaZ,SAA5E;EACAiB,UAAU,GAAG,OAAOA,UAAP,KAAsB,QAAtB,GAAiC,CAACA,UAAD,CAAjC,GAAgDA,UAAU,IAAI,CAAC,aAAD,CAA3E;EACA,IAAI/B,IAAI,CAACgB,gBAAL,CAAsBgB,iBAA1B,EAA6ChC,IAAI,CAACgB,gBAAL,CAAsBgB,iBAAtB,CAAwCD,UAAxC;EAC7C,MAAMN,KAAK,GAAG,CAACzB,IAAI,CAACiC,aAAL,IAAsBjC,IAAI,CAACkC,oBAA5B,KAAqDH,UAAU,CAACI,KAAX,CAAiBC,CAAC,IAAI3C,kBAAkB,CAAC2C,CAAD,EAAIpC,IAAJ,EAAU6B,WAAV,CAAxC,CAAnE;EACA,MAAMQ,QAAQ,GAAGhC,YAAY,CAACL,IAAD,EAAOQ,KAAK,CAAC8B,GAAN,IAAa,IAApB,EAA0BT,WAAW,CAACU,MAAZ,KAAuB,UAAvB,GAAoCR,UAApC,GAAiDA,UAAU,CAAC,CAAD,CAArF,EAA0F5B,SAA1F,CAA7B;;EACA,MAAMqC,IAAI,GAAG,MAAMH,QAAnB;;EACA,MAAMI,OAAO,GAAG,MAAM1C,UAAU,CAACC,IAAD,EAAOQ,KAAK,CAAC8B,GAAN,IAAa,IAApB,EAA0BT,WAAW,CAACU,MAAZ,KAAuB,UAAvB,GAAoCR,UAApC,GAAiDA,UAAU,CAAC,CAAD,CAArF,EAA0F5B,SAA1F,CAAhC;;EACA,MAAM,CAACqB,CAAD,EAAIkB,IAAJ,IAAY7D,QAAQ,CAAC2D,IAAD,CAA1B;EACA,IAAIG,QAAQ,GAAGZ,UAAU,CAACa,IAAX,EAAf;EACA,IAAIpC,KAAK,CAAC8B,GAAV,EAAeK,QAAQ,GAAI,GAAEnC,KAAK,CAAC8B,GAAI,GAAEK,QAAS,EAAnC;EACf,MAAME,gBAAgB,GAAGnD,WAAW,CAACiD,QAAD,CAApC;EACA,MAAMG,SAAS,GAAG9D,MAAM,CAAC,IAAD,CAAxB;EACAF,SAAS,CAAC,MAAM;IACd,MAAM;MACJiE,QADI;MAEJC;IAFI,IAGFnB,WAHJ;IAIAiB,SAAS,CAAChD,OAAV,GAAoB,IAApB;;IACA,IAAI,CAAC2B,KAAD,IAAU,CAACK,WAAf,EAA4B;MAC1B,IAAItB,KAAK,CAAC8B,GAAV,EAAe;QACb9C,aAAa,CAACQ,IAAD,EAAOQ,KAAK,CAAC8B,GAAb,EAAkBP,UAAlB,EAA8B,MAAM;UAC/C,IAAIe,SAAS,CAAChD,OAAd,EAAuB4C,IAAI,CAACD,OAAD,CAAJ;QACxB,CAFY,CAAb;MAGD,CAJD,MAIO;QACLlD,cAAc,CAACS,IAAD,EAAO+B,UAAP,EAAmB,MAAM;UACrC,IAAIe,SAAS,CAAChD,OAAd,EAAuB4C,IAAI,CAACD,OAAD,CAAJ;QACxB,CAFa,CAAd;MAGD;IACF;;IACD,IAAIhB,KAAK,IAAIoB,gBAAT,IAA6BA,gBAAgB,KAAKF,QAAlD,IAA8DG,SAAS,CAAChD,OAA5E,EAAqF;MACnF4C,IAAI,CAACD,OAAD,CAAJ;IACD;;IACD,SAASQ,UAAT,GAAsB;MACpB,IAAIH,SAAS,CAAChD,OAAd,EAAuB4C,IAAI,CAACD,OAAD,CAAJ;IACxB;;IACD,IAAIM,QAAQ,IAAI/C,IAAhB,EAAsBA,IAAI,CAACkD,EAAL,CAAQH,QAAR,EAAkBE,UAAlB;IACtB,IAAID,aAAa,IAAIhD,IAArB,EAA2BA,IAAI,CAACmD,KAAL,CAAWD,EAAX,CAAcF,aAAd,EAA6BC,UAA7B;IAC3B,OAAO,MAAM;MACXH,SAAS,CAAChD,OAAV,GAAoB,KAApB;MACA,IAAIiD,QAAQ,IAAI/C,IAAhB,EAAsB+C,QAAQ,CAACK,KAAT,CAAe,GAAf,EAAoBC,OAApB,CAA4BC,CAAC,IAAItD,IAAI,CAACuD,GAAL,CAASD,CAAT,EAAYL,UAAZ,CAAjC;MACtB,IAAID,aAAa,IAAIhD,IAArB,EAA2BgD,aAAa,CAACI,KAAd,CAAoB,GAApB,EAAyBC,OAAzB,CAAiCC,CAAC,IAAItD,IAAI,CAACmD,KAAL,CAAWI,GAAX,CAAeD,CAAf,EAAkBL,UAAlB,CAAtC;IAC5B,CAJD;EAKD,CA9BQ,EA8BN,CAACjD,IAAD,EAAO2C,QAAP,CA9BM,CAAT;EA+BA7D,SAAS,CAAC,MAAM;IACd,IAAIgE,SAAS,CAAChD,OAAV,IAAqB2B,KAAzB,EAAgC;MAC9BiB,IAAI,CAACF,IAAD,CAAJ;IACD;EACF,CAJQ,EAIN,CAACxC,IAAD,EAAOG,SAAP,EAAkBsB,KAAlB,CAJM,CAAT;EAKA,MAAM+B,GAAG,GAAG,CAAChC,CAAD,EAAIxB,IAAJ,EAAUyB,KAAV,CAAZ;EACA+B,GAAG,CAAChC,CAAJ,GAAQA,CAAR;EACAgC,GAAG,CAACxD,IAAJ,GAAWA,IAAX;EACAwD,GAAG,CAAC/B,KAAJ,GAAYA,KAAZ;EACA,IAAIA,KAAJ,EAAW,OAAO+B,GAAP;EACX,IAAI,CAAC/B,KAAD,IAAU,CAACK,WAAf,EAA4B,OAAO0B,GAAP;EAC5B,MAAM,IAAIC,OAAJ,CAAYC,OAAO,IAAI;IAC3B,IAAIlD,KAAK,CAAC8B,GAAV,EAAe;MACb9C,aAAa,CAACQ,IAAD,EAAOQ,KAAK,CAAC8B,GAAb,EAAkBP,UAAlB,EAA8B,MAAM2B,OAAO,EAA3C,CAAb;IACD,CAFD,MAEO;MACLnE,cAAc,CAACS,IAAD,EAAO+B,UAAP,EAAmB,MAAM2B,OAAO,EAAhC,CAAd;IACD;EACF,CANK,CAAN;AAOD"},"metadata":{},"sourceType":"module"}